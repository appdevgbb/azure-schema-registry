// ------------------------------------------------------------------------------
// <auto-generated>
//    Generated by avrogen, version 1.7.7.5
//    Changes to this file may cause incorrect behavior and will be lost if code
//    is regenerated
// </auto-generated>
// ------------------------------------------------------------------------------
namespace io.cloudevents
{
	using System;
	using System.Collections.Generic;
	using System.Text;
	using global::Avro;
	using global::Avro.Specific;
	
	public partial class AvroCloudEventData : ISpecificRecord
	{
		public static Schema _SCHEMA = Schema.Parse(@"{""type"":""record"",""name"":""AvroCloudEventData"",""namespace"":""io.cloudevents"",""fields"":[{""name"":""value"",""type"":{""type"":""map"",""values"":[""null"",""boolean"",{""type"":""map"",""values"":""AvroCloudEventData""},{""type"":""array"",""items"":""AvroCloudEventData""},""double"",""string""]}}]}");
		private IDictionary<string,System.Object> _value;
		public virtual Schema Schema
		{
			get
			{
				return AvroCloudEventData._SCHEMA;
			}
		}
		public IDictionary<string,System.Object> @value
		{
			get
			{
				return this._value;
			}
			set
			{
				this._value = value;
			}
		}
		public virtual object Get(int fieldPos)
		{
			switch (fieldPos)
			{
			case 0: return this.@value;
			default: throw new AvroRuntimeException("Bad index " + fieldPos + " in Get()");
			};
		}
		public virtual void Put(int fieldPos, object fieldValue)
		{
			switch (fieldPos)
			{
			case 0: this.@value = (IDictionary<string,System.Object>)fieldValue; break;
			default: throw new AvroRuntimeException("Bad index " + fieldPos + " in Put()");
			};
		}
	}
}
